package simple.project.services.manage;

import spark.Request;
import spark.Response;

public class SwaggerService {
	
	public String executeService(Request req, Response res) {
		StringBuffer sb = new StringBuffer();
		
		sb.append("{\n");
		sb.append("  \"swagger\" : \"2.0\",\n");
		sb.append("  \"info\" : {\n");
		sb.append("    \"title\" : \"SimpleRestProject\",\n");
		sb.append("    \"version\" : \"1.0.0\",\n");
		sb.append("    \"description\" : \"Simple REST services for tests\"\n");
		sb.append("  },\n");
		sb.append("  \"paths\" : {\n");
		sb.append("    \"/getproduct/{id}\" : {\n");
		sb.append("      \"get\" : {\n");
		sb.append("        \"operationId\" : \"getId\",\n");
		sb.append("        \"responses\" : {\n");
		sb.append("          \"200\" : {\n");
		sb.append("            \"description\" : \"OK\",\n");
		sb.append("            \"schema\" : {\n");
		sb.append("              \"$ref\" : \"#/definitions/product\"\n");
		sb.append("            }\n");
		sb.append("          }\n");
		sb.append("        },\n");
		sb.append("        \"produces\" : [ \"application/json\" ],\n");
		sb.append("        \"description\" : \"Retrieve product by ID\",\n");
		sb.append("        \"parameters\" : [ {\n");
		sb.append("          \"required\" : true,\n");
		sb.append("          \"name\" : \"id\",\n");
		sb.append("          \"in\" : \"path\",\n");
		sb.append("          \"type\" : \"string\",\n");
		sb.append("          \"description\" : \"ID of product (ex. 1 or 2 or 3)\"\n");
		sb.append("        } ]\n");
		sb.append("      }\n");
		sb.append("    },\n");
		sb.append("    \"/getproducts\" : {\n");
		sb.append("      \"get\" : {\n");
		sb.append("        \"operationId\" : \"getproducts\",\n");
		sb.append("        \"responses\" : {\n");
		sb.append("          \"200\" : {\n");
		sb.append("            \"description\" : \"OK\",\n");
		sb.append("            \"schema\" : {\n");
		sb.append("              \"type\" : \"array\",\n");
		sb.append("              \"items\" : {\n");
		sb.append("                \"$ref\" : \"#/definitions/product\"\n");
		sb.append("              }\n");
		sb.append("            }\n");
		sb.append("          }\n");
		sb.append("        },\n");
		sb.append("        \"produces\" : [ \"application/json\" ],\n");
		sb.append("        \"description\" : \"Retrieve all products as array\"\n");
		sb.append("      }\n");
		sb.append("    },\n");
		sb.append("    \"/error401\" : {\n");
		sb.append("      \"get\" : {\n");
		sb.append("        \"operationId\" : \"error401\",\n");
		sb.append("        \"responses\" : {\n");
		sb.append("          \"401\" : {\n");
		sb.append("            \"description\" : \"Unauthorized\",\n");
		sb.append("            \"schema\" : {\n");
		sb.append("              \"type\" : [ \"string\", \"null\" ]\n");
		sb.append("            }\n");
		sb.append("          }\n");
		sb.append("        },\n");
		sb.append("        \"produces\" : [ \"application/json\" ],\n");
		sb.append("        \"description\" : \"Retrieve error 401\"\n");
		sb.append("      }\n");
		sb.append("    },\n");
		sb.append("    \"/error500\" : {\n");
		sb.append("      \"get\" : {\n");
		sb.append("        \"operationId\" : \"error500\",\n");
		sb.append("        \"responses\" : {\n");
		sb.append("          \"500\" : {\n");
		sb.append("            \"description\" : \"Internal Server Error\",\n");
		sb.append("            \"schema\" : {\n");
		sb.append("              \"type\" : [ \"string\", \"null\" ]\n");
		sb.append("            }\n");
		sb.append("          }\n");
		sb.append("        },\n");
		sb.append("        \"produces\" : [ \"application/json\" ],\n");
		sb.append("        \"description\" : \"Retrieve error500\"\n");
		sb.append("      }\n");
		sb.append("    },\n");
		sb.append("    \"/login\" : {\n");
		sb.append("      \"post\" : {\n");
		sb.append("        \"operationId\" : \"login\",\n");
		sb.append("        \"responses\" : {\n");
		sb.append("          \"200\" : {\n");
		sb.append("            \"description\" : \"The operation was successful.\",\n");
		sb.append("            \"schema\" : {\n");
		sb.append("              \"$ref\" : \"#/definitions/user\"\n");
		sb.append("            }\n");
		sb.append("          }\n");
		sb.append("        },\n");
		sb.append("        \"consumes\" : [ \"application/json\" ],\n");
		sb.append("        \"produces\" : [ \"application/json\" ],\n");
		sb.append("        \"description\" : \"Execute a login\",\n");
		sb.append("        \"parameters\" : [ {\n");
		sb.append("          \"name\" : \"body\",\n");
		sb.append("          \"in\" : \"body\",\n");
		sb.append("          \"schema\" : {\n");
		sb.append("            \"$ref\" : \"#/definitions/credentials\"\n");
		sb.append("          },\n");
		sb.append("          \"description\" : \"Credential for login\",\n");
		sb.append("          \"required\" : true\n");
		sb.append("        } ]\n");
		sb.append("      }\n");
		sb.append("    }\n");
		sb.append("  },\n");
		sb.append("  \"basePath\" : \"/provarestapi/v1\",\n");
		sb.append("  \"definitions\" : {\n");
		sb.append("    \"product\" : {\n");
		sb.append("      \"type\" : \"object\",\n");
		sb.append("      \"properties\" : {\n");
		sb.append("        \"description\" : {\n");
		sb.append("          \"type\" : [ \"string\", \"null\" ]\n");
		sb.append("        },\n");
		sb.append("        \"id\" : {\n");
		sb.append("          \"type\" : \"string\"\n");
		sb.append("        },\n");
		sb.append("        \"name\" : {\n");
		sb.append("          \"type\" : \"string\"\n");
		sb.append("        },\n");
		sb.append("        \"price\" : {\n");
		sb.append("          \"type\" : \"number\"\n");
		sb.append("        },\n");
		sb.append("        \"image\" : {\n");
		sb.append("          \"type\" : [ \"string\", \"null\" ],\n");
		sb.append("          \"format\" : \"base64\"\n");
		sb.append("        }\n");
		sb.append("      },\n");
		sb.append("      \"required\" : [ \"id\" ]\n");
		sb.append("    },\n");
		sb.append("    \"credentials\" : {\n");
		sb.append("      \"type\" : \"object\",\n");
		sb.append("      \"properties\" : {\n");
		sb.append("        \"username\" : {\n");
		sb.append("          \"type\" : \"string\"\n");
		sb.append("        },\n");
		sb.append("        \"password\" : {\n");
		sb.append("          \"type\" : \"string\"\n");
		sb.append("        }\n");
		sb.append("      },\n");
		sb.append("      \"required\" : [ \"username\", \"password\" ]\n");
		sb.append("    },\n");
		sb.append("    \"user\" : {\n");
		sb.append("      \"type\" : \"object\",\n");
		sb.append("      \"properties\" : {\n");
		sb.append("        \"name\" : {\n");
		sb.append("          \"type\" : \"string\"\n");
		sb.append("        },\n");
		sb.append("        \"surname\" : {\n");
		sb.append("          \"type\" : \"string\"\n");
		sb.append("        },\n");
		sb.append("        \"username\" : {\n");
		sb.append("          \"type\" : \"string\"\n");
		sb.append("        },\n");
		sb.append("        \"country\" : {\n");
		sb.append("          \"type\" : [ \"string\", \"null\" ]\n");
		sb.append("        },\n");
		sb.append("        \"birthYear\" : {\n");
		sb.append("          \"type\" : [ \"string\", \"null\" ]\n");
		sb.append("        }\n");
		sb.append("      },\n");
		sb.append("      \"required\" : [ \"username\" ]\n");
		sb.append("    }\n");
		sb.append("  }\n");
		sb.append("}");
		
		res.header("Content-Type", "application/json");
		return sb.toString();
	}
	
}
